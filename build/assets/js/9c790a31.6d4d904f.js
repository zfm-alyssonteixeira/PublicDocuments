"use strict";(self.webpackChunkdocusite=self.webpackChunkdocusite||[]).push([[123],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=c(n),d=r,k=s["".concat(p,".").concat(d)]||s[d]||m[d]||l;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7542:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const l={},o=void 0,i={unversionedId:"general/Conventions/Naming",id:"general/Conventions/Naming",title:"Naming",description:"General",source:"@site/docs/general/Conventions/Naming.md",sourceDirName:"general/Conventions",slug:"/general/Conventions/Naming",permalink:"/Docusite/docs/general/Conventions/Naming",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/general/Conventions/Naming.md",tags:[],version:"current",frontMatter:{},sidebar:"generalSidebar",previous:{title:"Functions",permalink:"/Docusite/docs/general/Conventions/Functions"},next:{title:"Routes",permalink:"/Docusite/docs/general/Conventions/Routes"}},p={},c=[{value:"General",id:"general",level:2},{value:"PHP",id:"php",level:2},{value:"MySQL",id:"mysql",level:2},{value:"JavaScript",id:"javascript",level:2}],u={toc:c},s="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"general"},"General"),(0,r.kt)("p",null,"From General to individual like ",(0,r.kt)("inlineCode",{parentName:"p"},"ContactProjectEdit"),"."),(0,r.kt)("h2",{id:"php"},"PHP"),(0,r.kt)("p",null,"For ",(0,r.kt)("em",{parentName:"p"},"Properties")," we use ",(0,r.kt)("inlineCode",{parentName:"p"},"snake_case"),".",(0,r.kt)("br",{parentName:"p"}),"\n","For ",(0,r.kt)("em",{parentName:"p"},"Functions")," we use ",(0,r.kt)("inlineCode",{parentName:"p"},"camelCase"),"."),(0,r.kt)("h2",{id:"mysql"},"MySQL"),(0,r.kt)("p",null,"We are naming our tables inspired by Laravel."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Syntax"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"contacts")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"plural")),(0,r.kt)("td",{parentName:"tr",align:null},"All contacts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"contact_optin")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"singular_singular")),(0,r.kt)("td",{parentName:"tr",align:null},"1:1 relation from contact to optin")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mail_account_folders")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"singular_plural")),(0,r.kt)("td",{parentName:"tr",align:null},"1:N relation from mail accounts to folders")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"contacts_notes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"plural_plural")),(0,r.kt)("td",{parentName:"tr",align:null},"N:M relation from contact to notes")))),(0,r.kt)("p",null,"Columns which describe a boolean value like ",(0,r.kt)("inlineCode",{parentName:"p"},"is_deactivated")," should have a verb like ",(0,r.kt)("em",{parentName:"p"},"is")," in front of the status, separated with an underscore and followed by the verb. The column should have the default value ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,r.kt)("h2",{id:"javascript"},"JavaScript"),(0,r.kt)("p",null,"For ",(0,r.kt)("em",{parentName:"p"},"Properties")," we use ",(0,r.kt)("inlineCode",{parentName:"p"},"camelCase"),".\nFor ",(0,r.kt)("em",{parentName:"p"},"Functions")," we use ",(0,r.kt)("inlineCode",{parentName:"p"},"UpperCamelCase"),".\nFor ",(0,r.kt)("em",{parentName:"p"},"Types")," we use ",(0,r.kt)("inlineCode",{parentName:"p"},"UpperCamelCase")," with one letter in front of (G - Generic, T for Type, Z for Zod schema)."))}m.isMDXComponent=!0}}]);